/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the ErrReply type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrReply{}

// ErrReply struct for ErrReply
type ErrReply struct {
	// HTTP status code
	Code int32 `json:"code"`
	// HTTP status description
	Status string `json:"status"`
	// Application error message, for debugging
	Error string `json:"error"`
}

// NewErrReply instantiates a new ErrReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrReply(code int32, status string, error_ string) *ErrReply {
	this := ErrReply{}
	this.Code = code
	this.Status = status
	this.Error = error_
	return &this
}

// NewErrReplyWithDefaults instantiates a new ErrReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrReplyWithDefaults() *ErrReply {
	this := ErrReply{}
	return &this
}

// GetCode returns the Code field value
func (o *ErrReply) GetCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ErrReply) GetCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ErrReply) SetCode(v int32) {
	o.Code = v
}

// GetStatus returns the Status field value
func (o *ErrReply) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ErrReply) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ErrReply) SetStatus(v string) {
	o.Status = v
}

// GetError returns the Error field value
func (o *ErrReply) GetError() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *ErrReply) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *ErrReply) SetError(v string) {
	o.Error = v
}

func (o ErrReply) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrReply) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["status"] = o.Status
	toSerialize["error"] = o.Error
	return toSerialize, nil
}

type NullableErrReply struct {
	value *ErrReply
	isSet bool
}

func (v NullableErrReply) Get() *ErrReply {
	return v.value
}

func (v *NullableErrReply) Set(val *ErrReply) {
	v.value = val
	v.isSet = true
}

func (v NullableErrReply) IsSet() bool {
	return v.isSet
}

func (v *NullableErrReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrReply(val *ErrReply) *NullableErrReply {
	return &NullableErrReply{value: val, isSet: true}
}

func (v NullableErrReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


