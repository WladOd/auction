/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the DocumentAuditRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentAuditRequest{}

// DocumentAuditRequest struct for DocumentAuditRequest
type DocumentAuditRequest struct {
	Page int32 `json:"page"`
	PerPage int32 `json:"perPage"`
	Desc bool `json:"desc"`
}

// NewDocumentAuditRequest instantiates a new DocumentAuditRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentAuditRequest(page int32, perPage int32, desc bool) *DocumentAuditRequest {
	this := DocumentAuditRequest{}
	this.Page = page
	this.PerPage = perPage
	this.Desc = desc
	return &this
}

// NewDocumentAuditRequestWithDefaults instantiates a new DocumentAuditRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentAuditRequestWithDefaults() *DocumentAuditRequest {
	this := DocumentAuditRequest{}
	return &this
}

// GetPage returns the Page field value
func (o *DocumentAuditRequest) GetPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *DocumentAuditRequest) GetPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *DocumentAuditRequest) SetPage(v int32) {
	o.Page = v
}

// GetPerPage returns the PerPage field value
func (o *DocumentAuditRequest) GetPerPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PerPage
}

// GetPerPageOk returns a tuple with the PerPage field value
// and a boolean to check if the value has been set.
func (o *DocumentAuditRequest) GetPerPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PerPage, true
}

// SetPerPage sets field value
func (o *DocumentAuditRequest) SetPerPage(v int32) {
	o.PerPage = v
}

// GetDesc returns the Desc field value
func (o *DocumentAuditRequest) GetDesc() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Desc
}

// GetDescOk returns a tuple with the Desc field value
// and a boolean to check if the value has been set.
func (o *DocumentAuditRequest) GetDescOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Desc, true
}

// SetDesc sets field value
func (o *DocumentAuditRequest) SetDesc(v bool) {
	o.Desc = v
}

func (o DocumentAuditRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentAuditRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["page"] = o.Page
	toSerialize["perPage"] = o.PerPage
	toSerialize["desc"] = o.Desc
	return toSerialize, nil
}

type NullableDocumentAuditRequest struct {
	value *DocumentAuditRequest
	isSet bool
}

func (v NullableDocumentAuditRequest) Get() *DocumentAuditRequest {
	return v.value
}

func (v *NullableDocumentAuditRequest) Set(val *DocumentAuditRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentAuditRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentAuditRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentAuditRequest(val *DocumentAuditRequest) *NullableDocumentAuditRequest {
	return &NullableDocumentAuditRequest{value: val, isSet: true}
}

func (v NullableDocumentAuditRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentAuditRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


