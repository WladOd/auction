/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the CollectionListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectionListResponse{}

// CollectionListResponse struct for CollectionListResponse
type CollectionListResponse struct {
	Collections []Collection `json:"collections"`
}

// NewCollectionListResponse instantiates a new CollectionListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionListResponse(collections []Collection) *CollectionListResponse {
	this := CollectionListResponse{}
	this.Collections = collections
	return &this
}

// NewCollectionListResponseWithDefaults instantiates a new CollectionListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionListResponseWithDefaults() *CollectionListResponse {
	this := CollectionListResponse{}
	return &this
}

// GetCollections returns the Collections field value
func (o *CollectionListResponse) GetCollections() []Collection {
	if o == nil {
		var ret []Collection
		return ret
	}

	return o.Collections
}

// GetCollectionsOk returns a tuple with the Collections field value
// and a boolean to check if the value has been set.
func (o *CollectionListResponse) GetCollectionsOk() ([]Collection, bool) {
	if o == nil {
		return nil, false
	}
	return o.Collections, true
}

// SetCollections sets field value
func (o *CollectionListResponse) SetCollections(v []Collection) {
	o.Collections = v
}

func (o CollectionListResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectionListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["collections"] = o.Collections
	return toSerialize, nil
}

type NullableCollectionListResponse struct {
	value *CollectionListResponse
	isSet bool
}

func (v NullableCollectionListResponse) Get() *CollectionListResponse {
	return v.value
}

func (v *NullableCollectionListResponse) Set(val *CollectionListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionListResponse(val *CollectionListResponse) *NullableCollectionListResponse {
	return &NullableCollectionListResponse{value: val, isSet: true}
}

func (v NullableCollectionListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


