/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the LedgerDBSize type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LedgerDBSize{}

// LedgerDBSize struct for LedgerDBSize
type LedgerDBSize struct {
	Name string `json:"name"`
	Size float64 `json:"size"`
}

// NewLedgerDBSize instantiates a new LedgerDBSize object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLedgerDBSize(name string, size float64) *LedgerDBSize {
	this := LedgerDBSize{}
	this.Name = name
	this.Size = size
	return &this
}

// NewLedgerDBSizeWithDefaults instantiates a new LedgerDBSize object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLedgerDBSizeWithDefaults() *LedgerDBSize {
	this := LedgerDBSize{}
	return &this
}

// GetName returns the Name field value
func (o *LedgerDBSize) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LedgerDBSize) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LedgerDBSize) SetName(v string) {
	o.Name = v
}

// GetSize returns the Size field value
func (o *LedgerDBSize) GetSize() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *LedgerDBSize) GetSizeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *LedgerDBSize) SetSize(v float64) {
	o.Size = v
}

func (o LedgerDBSize) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LedgerDBSize) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["size"] = o.Size
	return toSerialize, nil
}

type NullableLedgerDBSize struct {
	value *LedgerDBSize
	isSet bool
}

func (v NullableLedgerDBSize) Get() *LedgerDBSize {
	return v.value
}

func (v *NullableLedgerDBSize) Set(val *LedgerDBSize) {
	v.value = val
	v.isSet = true
}

func (v NullableLedgerDBSize) IsSet() bool {
	return v.isSet
}

func (v *NullableLedgerDBSize) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLedgerDBSize(val *LedgerDBSize) *NullableLedgerDBSize {
	return &NullableLedgerDBSize{value: val, isSet: true}
}

func (v NullableLedgerDBSize) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLedgerDBSize) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


