/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the SchemaTxEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemaTxEntry{}

// SchemaTxEntry struct for SchemaTxEntry
type SchemaTxEntry struct {
	// Raw key value (contains 1-byte prefix for kind of the key)
	Key *string `json:"key,omitempty"`
	// Value hash
	HValue *string `json:"hValue,omitempty"`
	// Value length
	VLen *int32 `json:"vLen,omitempty"`
	Metadata *SchemaKVMetadata `json:"metadata,omitempty"`
	// Value, must be ignored when len(value) == 0 and vLen > 0, otherwise sha256(value) must be equal to hValue
	Value *string `json:"value,omitempty"`
}

// NewSchemaTxEntry instantiates a new SchemaTxEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemaTxEntry() *SchemaTxEntry {
	this := SchemaTxEntry{}
	return &this
}

// NewSchemaTxEntryWithDefaults instantiates a new SchemaTxEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemaTxEntryWithDefaults() *SchemaTxEntry {
	this := SchemaTxEntry{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SchemaTxEntry) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaTxEntry) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SchemaTxEntry) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SchemaTxEntry) SetKey(v string) {
	o.Key = &v
}

// GetHValue returns the HValue field value if set, zero value otherwise.
func (o *SchemaTxEntry) GetHValue() string {
	if o == nil || IsNil(o.HValue) {
		var ret string
		return ret
	}
	return *o.HValue
}

// GetHValueOk returns a tuple with the HValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaTxEntry) GetHValueOk() (*string, bool) {
	if o == nil || IsNil(o.HValue) {
		return nil, false
	}
	return o.HValue, true
}

// HasHValue returns a boolean if a field has been set.
func (o *SchemaTxEntry) HasHValue() bool {
	if o != nil && !IsNil(o.HValue) {
		return true
	}

	return false
}

// SetHValue gets a reference to the given string and assigns it to the HValue field.
func (o *SchemaTxEntry) SetHValue(v string) {
	o.HValue = &v
}

// GetVLen returns the VLen field value if set, zero value otherwise.
func (o *SchemaTxEntry) GetVLen() int32 {
	if o == nil || IsNil(o.VLen) {
		var ret int32
		return ret
	}
	return *o.VLen
}

// GetVLenOk returns a tuple with the VLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaTxEntry) GetVLenOk() (*int32, bool) {
	if o == nil || IsNil(o.VLen) {
		return nil, false
	}
	return o.VLen, true
}

// HasVLen returns a boolean if a field has been set.
func (o *SchemaTxEntry) HasVLen() bool {
	if o != nil && !IsNil(o.VLen) {
		return true
	}

	return false
}

// SetVLen gets a reference to the given int32 and assigns it to the VLen field.
func (o *SchemaTxEntry) SetVLen(v int32) {
	o.VLen = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SchemaTxEntry) GetMetadata() SchemaKVMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret SchemaKVMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaTxEntry) GetMetadataOk() (*SchemaKVMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SchemaTxEntry) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given SchemaKVMetadata and assigns it to the Metadata field.
func (o *SchemaTxEntry) SetMetadata(v SchemaKVMetadata) {
	o.Metadata = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *SchemaTxEntry) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaTxEntry) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *SchemaTxEntry) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *SchemaTxEntry) SetValue(v string) {
	o.Value = &v
}

func (o SchemaTxEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemaTxEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.HValue) {
		toSerialize["hValue"] = o.HValue
	}
	if !IsNil(o.VLen) {
		toSerialize["vLen"] = o.VLen
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableSchemaTxEntry struct {
	value *SchemaTxEntry
	isSet bool
}

func (v NullableSchemaTxEntry) Get() *SchemaTxEntry {
	return v.value
}

func (v *NullableSchemaTxEntry) Set(val *SchemaTxEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemaTxEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemaTxEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemaTxEntry(val *SchemaTxEntry) *NullableSchemaTxEntry {
	return &NullableSchemaTxEntry{value: val, isSet: true}
}

func (v NullableSchemaTxEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemaTxEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


