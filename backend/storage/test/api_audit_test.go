/*
Immudb Cloud Service

Testing AuditAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package storage

// import (
// 	"context"
// 	"github.com/stretchr/testify/assert"
// 	"github.com/stretchr/testify/require"
// 	"testing"
// 	openapiclient "github.com/WladOd/auction.git/storage"
// )

// func Test_storage_AuditAPIService(t *testing.T) {

// 	configuration := openapiclient.NewConfiguration()
// 	apiClient := openapiclient.NewAPIClient(configuration)

// 	t.Run("Test AuditAPIService AuditDocument", func(t *testing.T) {

// 		t.Skip("skip test")  // remove to run test

// 		var ledger string
// 		var collection string
// 		var documentId string

// 		resp, httpRes, err := apiClient.AuditAPI.AuditDocument(context.Background(), ledger, collection, documentId).Execute()

// 		require.Nil(t, err)
// 		require.NotNil(t, resp)
// 		assert.Equal(t, 200, httpRes.StatusCode)

// 	})

// 	t.Run("Test AuditAPIService DiffDocument", func(t *testing.T) {

// 		t.Skip("skip test")  // remove to run test

// 		var ledger string
// 		var collection string
// 		var documentId string

// 		resp, httpRes, err := apiClient.AuditAPI.DiffDocument(context.Background(), ledger, collection, documentId).Execute()

// 		require.Nil(t, err)
// 		require.NotNil(t, resp)
// 		assert.Equal(t, 200, httpRes.StatusCode)

// 	})

// 	t.Run("Test AuditAPIService GetCurrentState", func(t *testing.T) {

// 		t.Skip("skip test")  // remove to run test

// 		var ledger string

// 		resp, httpRes, err := apiClient.AuditAPI.GetCurrentState(context.Background(), ledger).Execute()

// 		require.Nil(t, err)
// 		require.NotNil(t, resp)
// 		assert.Equal(t, 200, httpRes.StatusCode)

// 	})

// 	t.Run("Test AuditAPIService GetDocumentProof", func(t *testing.T) {

// 		t.Skip("skip test")  // remove to run test

// 		var ledger string
// 		var collection string
// 		var documentId string

// 		resp, httpRes, err := apiClient.AuditAPI.GetDocumentProof(context.Background(), ledger, collection, documentId).Execute()

// 		require.Nil(t, err)
// 		require.NotNil(t, resp)
// 		assert.Equal(t, 200, httpRes.StatusCode)

// 	})

// 	// t.Run("Test AuditAPIService GetLedgerDbSize", func(t *testing.T) {

// 	// 	t.Skip("skip test")  // remove to run test

// 	// 	var ledger string

// 	// 	resp, httpRes, err := apiClient.AuditAPI.GetLedgerDbSize(context.Background(), ledger).Execute()

// 	// 	require.Nil(t, err)
// 	// 	require.NotNil(t, resp)
// 	// 	assert.Equal(t, 200, httpRes.StatusCode)

// 	// })

// }
