/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the DocumentDiffResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentDiffResponse{}

// DocumentDiffResponse struct for DocumentDiffResponse
type DocumentDiffResponse struct {
	Revisions []DocumentAtRevision `json:"revisions"`
	Diffs []DocumentDiff `json:"diffs"`
}

// NewDocumentDiffResponse instantiates a new DocumentDiffResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentDiffResponse(revisions []DocumentAtRevision, diffs []DocumentDiff) *DocumentDiffResponse {
	this := DocumentDiffResponse{}
	this.Revisions = revisions
	this.Diffs = diffs
	return &this
}

// NewDocumentDiffResponseWithDefaults instantiates a new DocumentDiffResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentDiffResponseWithDefaults() *DocumentDiffResponse {
	this := DocumentDiffResponse{}
	return &this
}

// GetRevisions returns the Revisions field value
func (o *DocumentDiffResponse) GetRevisions() []DocumentAtRevision {
	if o == nil {
		var ret []DocumentAtRevision
		return ret
	}

	return o.Revisions
}

// GetRevisionsOk returns a tuple with the Revisions field value
// and a boolean to check if the value has been set.
func (o *DocumentDiffResponse) GetRevisionsOk() ([]DocumentAtRevision, bool) {
	if o == nil {
		return nil, false
	}
	return o.Revisions, true
}

// SetRevisions sets field value
func (o *DocumentDiffResponse) SetRevisions(v []DocumentAtRevision) {
	o.Revisions = v
}

// GetDiffs returns the Diffs field value
func (o *DocumentDiffResponse) GetDiffs() []DocumentDiff {
	if o == nil {
		var ret []DocumentDiff
		return ret
	}

	return o.Diffs
}

// GetDiffsOk returns a tuple with the Diffs field value
// and a boolean to check if the value has been set.
func (o *DocumentDiffResponse) GetDiffsOk() ([]DocumentDiff, bool) {
	if o == nil {
		return nil, false
	}
	return o.Diffs, true
}

// SetDiffs sets field value
func (o *DocumentDiffResponse) SetDiffs(v []DocumentDiff) {
	o.Diffs = v
}

func (o DocumentDiffResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentDiffResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["revisions"] = o.Revisions
	toSerialize["diffs"] = o.Diffs
	return toSerialize, nil
}

type NullableDocumentDiffResponse struct {
	value *DocumentDiffResponse
	isSet bool
}

func (v NullableDocumentDiffResponse) Get() *DocumentDiffResponse {
	return v.value
}

func (v *NullableDocumentDiffResponse) Set(val *DocumentDiffResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentDiffResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentDiffResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentDiffResponse(val *DocumentDiffResponse) *NullableDocumentDiffResponse {
	return &NullableDocumentDiffResponse{value: val, isSet: true}
}

func (v NullableDocumentDiffResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentDiffResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


