/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the DocumentUpdateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentUpdateResponse{}

// DocumentUpdateResponse struct for DocumentUpdateResponse
type DocumentUpdateResponse struct {
	TransactionId string `json:"transactionId"`
	DocumentId string `json:"documentId"`
	Revision string `json:"revision"`
}

// NewDocumentUpdateResponse instantiates a new DocumentUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentUpdateResponse(transactionId string, documentId string, revision string) *DocumentUpdateResponse {
	this := DocumentUpdateResponse{}
	this.TransactionId = transactionId
	this.DocumentId = documentId
	this.Revision = revision
	return &this
}

// NewDocumentUpdateResponseWithDefaults instantiates a new DocumentUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentUpdateResponseWithDefaults() *DocumentUpdateResponse {
	this := DocumentUpdateResponse{}
	return &this
}

// GetTransactionId returns the TransactionId field value
func (o *DocumentUpdateResponse) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *DocumentUpdateResponse) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *DocumentUpdateResponse) SetTransactionId(v string) {
	o.TransactionId = v
}

// GetDocumentId returns the DocumentId field value
func (o *DocumentUpdateResponse) GetDocumentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value
// and a boolean to check if the value has been set.
func (o *DocumentUpdateResponse) GetDocumentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DocumentId, true
}

// SetDocumentId sets field value
func (o *DocumentUpdateResponse) SetDocumentId(v string) {
	o.DocumentId = v
}

// GetRevision returns the Revision field value
func (o *DocumentUpdateResponse) GetRevision() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *DocumentUpdateResponse) GetRevisionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *DocumentUpdateResponse) SetRevision(v string) {
	o.Revision = v
}

func (o DocumentUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentUpdateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["transactionId"] = o.TransactionId
	toSerialize["documentId"] = o.DocumentId
	toSerialize["revision"] = o.Revision
	return toSerialize, nil
}

type NullableDocumentUpdateResponse struct {
	value *DocumentUpdateResponse
	isSet bool
}

func (v NullableDocumentUpdateResponse) Get() *DocumentUpdateResponse {
	return v.value
}

func (v *NullableDocumentUpdateResponse) Set(val *DocumentUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentUpdateResponse(val *DocumentUpdateResponse) *NullableDocumentUpdateResponse {
	return &NullableDocumentUpdateResponse{value: val, isSet: true}
}

func (v NullableDocumentUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


