/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the DocumentsCountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentsCountResponse{}

// DocumentsCountResponse struct for DocumentsCountResponse
type DocumentsCountResponse struct {
	Collection string `json:"collection"`
	Count int32 `json:"count"`
}

// NewDocumentsCountResponse instantiates a new DocumentsCountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentsCountResponse(collection string, count int32) *DocumentsCountResponse {
	this := DocumentsCountResponse{}
	this.Collection = collection
	this.Count = count
	return &this
}

// NewDocumentsCountResponseWithDefaults instantiates a new DocumentsCountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentsCountResponseWithDefaults() *DocumentsCountResponse {
	this := DocumentsCountResponse{}
	return &this
}

// GetCollection returns the Collection field value
func (o *DocumentsCountResponse) GetCollection() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Collection
}

// GetCollectionOk returns a tuple with the Collection field value
// and a boolean to check if the value has been set.
func (o *DocumentsCountResponse) GetCollectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Collection, true
}

// SetCollection sets field value
func (o *DocumentsCountResponse) SetCollection(v string) {
	o.Collection = v
}

// GetCount returns the Count field value
func (o *DocumentsCountResponse) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *DocumentsCountResponse) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *DocumentsCountResponse) SetCount(v int32) {
	o.Count = v
}

func (o DocumentsCountResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentsCountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["collection"] = o.Collection
	toSerialize["count"] = o.Count
	return toSerialize, nil
}

type NullableDocumentsCountResponse struct {
	value *DocumentsCountResponse
	isSet bool
}

func (v NullableDocumentsCountResponse) Get() *DocumentsCountResponse {
	return v.value
}

func (v *NullableDocumentsCountResponse) Set(val *DocumentsCountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentsCountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentsCountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentsCountResponse(val *DocumentsCountResponse) *NullableDocumentsCountResponse {
	return &NullableDocumentsCountResponse{value: val, isSet: true}
}

func (v NullableDocumentsCountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentsCountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


