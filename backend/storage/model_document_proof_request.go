/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the DocumentProofRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentProofRequest{}

// DocumentProofRequest struct for DocumentProofRequest
type DocumentProofRequest struct {
	TransactionId int32 `json:"transactionId"`
	ProofSinceTransactionId *int32 `json:"proofSinceTransactionId,omitempty"`
}

// NewDocumentProofRequest instantiates a new DocumentProofRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentProofRequest(transactionId int32) *DocumentProofRequest {
	this := DocumentProofRequest{}
	this.TransactionId = transactionId
	return &this
}

// NewDocumentProofRequestWithDefaults instantiates a new DocumentProofRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentProofRequestWithDefaults() *DocumentProofRequest {
	this := DocumentProofRequest{}
	return &this
}

// GetTransactionId returns the TransactionId field value
func (o *DocumentProofRequest) GetTransactionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *DocumentProofRequest) GetTransactionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *DocumentProofRequest) SetTransactionId(v int32) {
	o.TransactionId = v
}

// GetProofSinceTransactionId returns the ProofSinceTransactionId field value if set, zero value otherwise.
func (o *DocumentProofRequest) GetProofSinceTransactionId() int32 {
	if o == nil || IsNil(o.ProofSinceTransactionId) {
		var ret int32
		return ret
	}
	return *o.ProofSinceTransactionId
}

// GetProofSinceTransactionIdOk returns a tuple with the ProofSinceTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentProofRequest) GetProofSinceTransactionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProofSinceTransactionId) {
		return nil, false
	}
	return o.ProofSinceTransactionId, true
}

// HasProofSinceTransactionId returns a boolean if a field has been set.
func (o *DocumentProofRequest) HasProofSinceTransactionId() bool {
	if o != nil && !IsNil(o.ProofSinceTransactionId) {
		return true
	}

	return false
}

// SetProofSinceTransactionId gets a reference to the given int32 and assigns it to the ProofSinceTransactionId field.
func (o *DocumentProofRequest) SetProofSinceTransactionId(v int32) {
	o.ProofSinceTransactionId = &v
}

func (o DocumentProofRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentProofRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["transactionId"] = o.TransactionId
	if !IsNil(o.ProofSinceTransactionId) {
		toSerialize["proofSinceTransactionId"] = o.ProofSinceTransactionId
	}
	return toSerialize, nil
}

type NullableDocumentProofRequest struct {
	value *DocumentProofRequest
	isSet bool
}

func (v NullableDocumentProofRequest) Get() *DocumentProofRequest {
	return v.value
}

func (v *NullableDocumentProofRequest) Set(val *DocumentProofRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentProofRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentProofRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentProofRequest(val *DocumentProofRequest) *NullableDocumentProofRequest {
	return &NullableDocumentProofRequest{value: val, isSet: true}
}

func (v NullableDocumentProofRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentProofRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


