/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the FieldComparison type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FieldComparison{}

// FieldComparison struct for FieldComparison
type FieldComparison struct {
	Field string `json:"field"`
	Operator Operator `json:"operator"`
	Value interface{} `json:"value"`
}

// NewFieldComparison instantiates a new FieldComparison object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFieldComparison(field string, operator Operator, value interface{}) *FieldComparison {
	this := FieldComparison{}
	this.Field = field
	this.Operator = operator
	this.Value = value
	return &this
}

// NewFieldComparisonWithDefaults instantiates a new FieldComparison object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFieldComparisonWithDefaults() *FieldComparison {
	this := FieldComparison{}
	var operator Operator = EQ
	this.Operator = operator
	return &this
}

// GetField returns the Field field value
func (o *FieldComparison) GetField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *FieldComparison) GetFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *FieldComparison) SetField(v string) {
	o.Field = v
}

// GetOperator returns the Operator field value
func (o *FieldComparison) GetOperator() Operator {
	if o == nil {
		var ret Operator
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *FieldComparison) GetOperatorOk() (*Operator, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *FieldComparison) SetOperator(v Operator) {
	o.Operator = v
}

// GetValue returns the Value field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *FieldComparison) GetValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FieldComparison) GetValueOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *FieldComparison) SetValue(v interface{}) {
	o.Value = v
}

func (o FieldComparison) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FieldComparison) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field"] = o.Field
	toSerialize["operator"] = o.Operator
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableFieldComparison struct {
	value *FieldComparison
	isSet bool
}

func (v NullableFieldComparison) Get() *FieldComparison {
	return v.value
}

func (v *NullableFieldComparison) Set(val *FieldComparison) {
	v.value = val
	v.isSet = true
}

func (v NullableFieldComparison) IsSet() bool {
	return v.isSet
}

func (v *NullableFieldComparison) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFieldComparison(val *FieldComparison) *NullableFieldComparison {
	return &NullableFieldComparison{value: val, isSet: true}
}

func (v NullableFieldComparison) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFieldComparison) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


