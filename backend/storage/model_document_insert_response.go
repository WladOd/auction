/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the DocumentInsertResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentInsertResponse{}

// DocumentInsertResponse struct for DocumentInsertResponse
type DocumentInsertResponse struct {
	TransactionId *string `json:"transactionId,omitempty"`
	DocumentId string `json:"documentId"`
}

// NewDocumentInsertResponse instantiates a new DocumentInsertResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentInsertResponse(documentId string) *DocumentInsertResponse {
	this := DocumentInsertResponse{}
	this.DocumentId = documentId
	return &this
}

// NewDocumentInsertResponseWithDefaults instantiates a new DocumentInsertResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentInsertResponseWithDefaults() *DocumentInsertResponse {
	this := DocumentInsertResponse{}
	return &this
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *DocumentInsertResponse) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentInsertResponse) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *DocumentInsertResponse) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *DocumentInsertResponse) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetDocumentId returns the DocumentId field value
func (o *DocumentInsertResponse) GetDocumentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value
// and a boolean to check if the value has been set.
func (o *DocumentInsertResponse) GetDocumentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DocumentId, true
}

// SetDocumentId sets field value
func (o *DocumentInsertResponse) SetDocumentId(v string) {
	o.DocumentId = v
}

func (o DocumentInsertResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentInsertResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	toSerialize["documentId"] = o.DocumentId
	return toSerialize, nil
}

type NullableDocumentInsertResponse struct {
	value *DocumentInsertResponse
	isSet bool
}

func (v NullableDocumentInsertResponse) Get() *DocumentInsertResponse {
	return v.value
}

func (v *NullableDocumentInsertResponse) Set(val *DocumentInsertResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentInsertResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentInsertResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentInsertResponse(val *DocumentInsertResponse) *NullableDocumentInsertResponse {
	return &NullableDocumentInsertResponse{value: val, isSet: true}
}

func (v NullableDocumentInsertResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentInsertResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


