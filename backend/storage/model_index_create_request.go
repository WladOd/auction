/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the IndexCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndexCreateRequest{}

// IndexCreateRequest struct for IndexCreateRequest
type IndexCreateRequest struct {
	Fields []string `json:"fields"`
	IsUnique bool `json:"isUnique"`
}

// NewIndexCreateRequest instantiates a new IndexCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexCreateRequest(fields []string, isUnique bool) *IndexCreateRequest {
	this := IndexCreateRequest{}
	this.Fields = fields
	this.IsUnique = isUnique
	return &this
}

// NewIndexCreateRequestWithDefaults instantiates a new IndexCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexCreateRequestWithDefaults() *IndexCreateRequest {
	this := IndexCreateRequest{}
	return &this
}

// GetFields returns the Fields field value
func (o *IndexCreateRequest) GetFields() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
func (o *IndexCreateRequest) GetFieldsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fields, true
}

// SetFields sets field value
func (o *IndexCreateRequest) SetFields(v []string) {
	o.Fields = v
}

// GetIsUnique returns the IsUnique field value
func (o *IndexCreateRequest) GetIsUnique() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsUnique
}

// GetIsUniqueOk returns a tuple with the IsUnique field value
// and a boolean to check if the value has been set.
func (o *IndexCreateRequest) GetIsUniqueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsUnique, true
}

// SetIsUnique sets field value
func (o *IndexCreateRequest) SetIsUnique(v bool) {
	o.IsUnique = v
}

func (o IndexCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndexCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fields"] = o.Fields
	toSerialize["isUnique"] = o.IsUnique
	return toSerialize, nil
}

type NullableIndexCreateRequest struct {
	value *IndexCreateRequest
	isSet bool
}

func (v NullableIndexCreateRequest) Get() *IndexCreateRequest {
	return v.value
}

func (v *NullableIndexCreateRequest) Set(val *IndexCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexCreateRequest(val *IndexCreateRequest) *NullableIndexCreateRequest {
	return &NullableIndexCreateRequest{value: val, isSet: true}
}

func (v NullableIndexCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


