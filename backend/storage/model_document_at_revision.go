/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the DocumentAtRevision type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentAtRevision{}

// DocumentAtRevision struct for DocumentAtRevision
type DocumentAtRevision struct {
	TransactionId string `json:"transactionId"`
	Revision string `json:"revision"`
	Document map[string]interface{} `json:"document"`
}

// NewDocumentAtRevision instantiates a new DocumentAtRevision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentAtRevision(transactionId string, revision string, document map[string]interface{}) *DocumentAtRevision {
	this := DocumentAtRevision{}
	this.TransactionId = transactionId
	this.Revision = revision
	this.Document = document
	return &this
}

// NewDocumentAtRevisionWithDefaults instantiates a new DocumentAtRevision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentAtRevisionWithDefaults() *DocumentAtRevision {
	this := DocumentAtRevision{}
	return &this
}

// GetTransactionId returns the TransactionId field value
func (o *DocumentAtRevision) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *DocumentAtRevision) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *DocumentAtRevision) SetTransactionId(v string) {
	o.TransactionId = v
}

// GetRevision returns the Revision field value
func (o *DocumentAtRevision) GetRevision() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *DocumentAtRevision) GetRevisionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *DocumentAtRevision) SetRevision(v string) {
	o.Revision = v
}

// GetDocument returns the Document field value
func (o *DocumentAtRevision) GetDocument() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Document
}

// GetDocumentOk returns a tuple with the Document field value
// and a boolean to check if the value has been set.
func (o *DocumentAtRevision) GetDocumentOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Document, true
}

// SetDocument sets field value
func (o *DocumentAtRevision) SetDocument(v map[string]interface{}) {
	o.Document = v
}

func (o DocumentAtRevision) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentAtRevision) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["transactionId"] = o.TransactionId
	toSerialize["revision"] = o.Revision
	toSerialize["document"] = o.Document
	return toSerialize, nil
}

type NullableDocumentAtRevision struct {
	value *DocumentAtRevision
	isSet bool
}

func (v NullableDocumentAtRevision) Get() *DocumentAtRevision {
	return v.value
}

func (v *NullableDocumentAtRevision) Set(val *DocumentAtRevision) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentAtRevision) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentAtRevision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentAtRevision(val *DocumentAtRevision) *NullableDocumentAtRevision {
	return &NullableDocumentAtRevision{value: val, isSet: true}
}

func (v NullableDocumentAtRevision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentAtRevision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


