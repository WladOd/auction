/*
Immudb Cloud Service

Specification of API to interact with Immudb Cloud Service.

API version: 1.0.0
Contact: contact@codenotary.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the ExportS3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportS3{}

// ExportS3 struct for ExportS3
type ExportS3 struct {
	Region string `json:"region"`
	AccessKey string `json:"accessKey"`
	SecretKey string `json:"secretKey"`
	Token string `json:"token"`
	Bucket string `json:"bucket"`
	UploadKey string `json:"uploadKey"`
}

// NewExportS3 instantiates a new ExportS3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportS3(region string, accessKey string, secretKey string, token string, bucket string, uploadKey string) *ExportS3 {
	this := ExportS3{}
	this.Region = region
	this.AccessKey = accessKey
	this.SecretKey = secretKey
	this.Token = token
	this.Bucket = bucket
	this.UploadKey = uploadKey
	return &this
}

// NewExportS3WithDefaults instantiates a new ExportS3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportS3WithDefaults() *ExportS3 {
	this := ExportS3{}
	return &this
}

// GetRegion returns the Region field value
func (o *ExportS3) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *ExportS3) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *ExportS3) SetRegion(v string) {
	o.Region = v
}

// GetAccessKey returns the AccessKey field value
func (o *ExportS3) GetAccessKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value
// and a boolean to check if the value has been set.
func (o *ExportS3) GetAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessKey, true
}

// SetAccessKey sets field value
func (o *ExportS3) SetAccessKey(v string) {
	o.AccessKey = v
}

// GetSecretKey returns the SecretKey field value
func (o *ExportS3) GetSecretKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value
// and a boolean to check if the value has been set.
func (o *ExportS3) GetSecretKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretKey, true
}

// SetSecretKey sets field value
func (o *ExportS3) SetSecretKey(v string) {
	o.SecretKey = v
}

// GetToken returns the Token field value
func (o *ExportS3) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ExportS3) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ExportS3) SetToken(v string) {
	o.Token = v
}

// GetBucket returns the Bucket field value
func (o *ExportS3) GetBucket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value
// and a boolean to check if the value has been set.
func (o *ExportS3) GetBucketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bucket, true
}

// SetBucket sets field value
func (o *ExportS3) SetBucket(v string) {
	o.Bucket = v
}

// GetUploadKey returns the UploadKey field value
func (o *ExportS3) GetUploadKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UploadKey
}

// GetUploadKeyOk returns a tuple with the UploadKey field value
// and a boolean to check if the value has been set.
func (o *ExportS3) GetUploadKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadKey, true
}

// SetUploadKey sets field value
func (o *ExportS3) SetUploadKey(v string) {
	o.UploadKey = v
}

func (o ExportS3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportS3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["region"] = o.Region
	toSerialize["accessKey"] = o.AccessKey
	toSerialize["secretKey"] = o.SecretKey
	toSerialize["token"] = o.Token
	toSerialize["bucket"] = o.Bucket
	toSerialize["uploadKey"] = o.UploadKey
	return toSerialize, nil
}

type NullableExportS3 struct {
	value *ExportS3
	isSet bool
}

func (v NullableExportS3) Get() *ExportS3 {
	return v.value
}

func (v *NullableExportS3) Set(val *ExportS3) {
	v.value = val
	v.isSet = true
}

func (v NullableExportS3) IsSet() bool {
	return v.isSet
}

func (v *NullableExportS3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportS3(val *ExportS3) *NullableExportS3 {
	return &NullableExportS3{value: val, isSet: true}
}

func (v NullableExportS3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportS3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


